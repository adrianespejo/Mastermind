package presentation;

import utils.KeyListenerPers;
import java.awt.event.KeyEvent;
import java.util.ArrayList;
import java.util.concurrent.ThreadLocalRandom;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.UIManager;
import utils.Pair;

/**
 *
 * @author Martínez Martínez, Daniel
 */
public class VistaTableroCodeB extends javax.swing.JFrame {

    CtrlPresentacion CP;
    int num;
    ArrayList<Boolean> pistas;
    int ran;
    int dif;
    int turno;
    int state;
    int nPistas;
    boolean introducirJugada = true;
    Icon iconoVacio;
    Icon iconoVacioK;
    ArrayList<Integer> cods;
    JLabel[][] codePegs;
    JLabel[][] keyPegs;
    
    /**
     * Creates new form VistaTablero
     */
    public VistaTableroCodeB() {
        try {
            for (UIManager.LookAndFeelInfo info : UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (Exception e) {
            try {
                UIManager.setLookAndFeel(
                UIManager.getSystemLookAndFeelClassName());
            } catch(Exception ex){
                
            }
        }
        initComponents();
        
        setLocationRelativeTo(null);
        
        ImageIcon imgicon = new ImageIcon("src/resources/iconomastermind.png");
        iconoVacio = new javax.swing.ImageIcon(getClass().getResource("/resources/0.png"));
        iconoVacioK = new javax.swing.ImageIcon(getClass().getResource("/resources/0K.png"));
        turno = state = 1;
        cods = new ArrayList<Integer>();
        this.setIconImage(imgicon.getImage());
        setListeners();
    }
    
    /**
     *
     * @param CP la capa de presentación
     */
    public void setCP(CtrlPresentacion CP){
        this.CP = CP;
    }
    
    private void setListeners(){
        KeyListenerPers kl2 = new KeyListenerPers(jButton4, KeyEvent.VK_ESCAPE);
        jPanel1.setFocusable(true);
        jPanel1.addKeyListener(kl2);
        jPanel2.setFocusable(true);
        jPanel2.addKeyListener(kl2);
        jPanel4.setFocusable(true);
        jPanel4.addKeyListener(kl2);
        jButton1.addKeyListener(kl2);
        jButton2.addKeyListener(kl2);
        jButton3.addKeyListener(kl2);
        jButton4.addKeyListener(kl2);
        jButton5.addKeyListener(kl2);
        jButton6.addKeyListener(kl2);
        jButton7.addKeyListener(kl2);
        jButton8.addKeyListener(kl2);
        jButton9.addKeyListener(kl2);
        jButton10.addKeyListener(kl2);
        jButton11.addKeyListener(kl2);
        jButton12.addKeyListener(kl2);
        jButton13.addKeyListener(kl2);
        jButton14.addKeyListener(kl2);
        
        KeyListenerPers kl = new KeyListenerPers(jButton2, KeyEvent.VK_BACK_SPACE);
        jPanel1.setFocusable(true);
        jPanel1.addKeyListener(kl);
        jPanel2.addKeyListener(kl);
        jPanel4.addKeyListener(kl);
        jButton1.addKeyListener(kl);
        jButton2.addKeyListener(kl);
        jButton3.addKeyListener(kl);
        jButton4.addKeyListener(kl);
        jButton5.addKeyListener(kl);
        jButton6.addKeyListener(kl);
        jButton7.addKeyListener(kl);
        jButton8.addKeyListener(kl);
        jButton9.addKeyListener(kl);
        jButton10.addKeyListener(kl);
        jButton11.addKeyListener(kl);
        jButton12.addKeyListener(kl);
        jButton13.addKeyListener(kl);
        jButton14.addKeyListener(kl);
    }
    
    public void actualizaPuntuacion(){
        int points = CP.getPuntuacion();
        if(points < 0) {
            JOptionPane.showMessageDialog(null, "Te has quedado sin puntos, Game over :(");
            jButton4ActionPerformed(null);
        }
        setTitle("MasterMind - Puntuación: "+points+" puntos.");
    }
    
    /**
     *
     * @param n el número de fichas de la partida
     * @param r el rango de colores de la partida
     * @param d la dificultad de la partida
     * @param t el turno porque el que va la partida
     * @param cargado si la partida se está cargando es cierto, si es una nueva partida es falso
     */
    public void setParams(int n, int r, int d, int t, boolean cargado){
        this.num = n;
        this.ran = r;
        this.dif = d;  
        this.turno = t;
        
        this.nPistas = 0;
        
        this.pistas = new ArrayList();
        for(int i = 0; i < num; i++) {
            pistas.add(false);
        }
        labelsMethod();
        if (cargado) {
            cargarTableroB(CP.getJugadasCodeB());
            cargarTableroM(CP.getJugadasCodeM());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        jButton10 = new javax.swing.JButton();
        jButton11 = new javax.swing.JButton();
        jButton12 = new javax.swing.JButton();
        jButton13 = new javax.swing.JButton();
        jButton14 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton15 = new javax.swing.JButton();

        jButton6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/1.png"))); // NOI18N
        jButton6.setPreferredSize(new java.awt.Dimension(35, 35));
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jButton7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/2.png"))); // NOI18N
        jButton7.setPreferredSize(new java.awt.Dimension(35, 35));
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jButton8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/3.png"))); // NOI18N
        jButton8.setPreferredSize(new java.awt.Dimension(35, 35));
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        jButton9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/4.png"))); // NOI18N
        jButton9.setPreferredSize(new java.awt.Dimension(35, 35));
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        jButton10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/5.png"))); // NOI18N
        jButton10.setPreferredSize(new java.awt.Dimension(35, 35));
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });

        jButton11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/6.png"))); // NOI18N
        jButton11.setPreferredSize(new java.awt.Dimension(35, 35));
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });

        jButton12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/7.png"))); // NOI18N
        jButton12.setPreferredSize(new java.awt.Dimension(35, 35));
        jButton12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton12ActionPerformed(evt);
            }
        });

        jButton13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/8.png"))); // NOI18N
        jButton13.setPreferredSize(new java.awt.Dimension(35, 35));
        jButton13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton13ActionPerformed(evt);
            }
        });

        jButton14.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/9.png"))); // NOI18N
        jButton14.setPreferredSize(new java.awt.Dimension(35, 35));
        jButton14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton14ActionPerformed(evt);
            }
        });

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(239, 207, 167));

        jPanel2.setBackground(new java.awt.Color(239, 207, 167));
        jPanel2.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 440, Short.MAX_VALUE)
        );

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Introduce tu jugada");

        jPanel4.setBackground(new java.awt.Color(239, 207, 167));
        jPanel4.setLayout(new java.awt.GridBagLayout());

        jButton1.setText("Confirmar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Borrar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Guardar partida");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("Salir de la partida");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setText("Ayuda");
        jButton5.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton15.setText("Pista");
        jButton15.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton15ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(71, 71, 71)
                                .addComponent(jButton1)
                                .addGap(45, 45, 45))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jButton3)
                                .addGap(29, 29, 29)))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButton15, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(49, 49, 49)
                                .addComponent(jButton2))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(29, 29, 29)
                                .addComponent(jButton4))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 424, Short.MAX_VALUE)
                            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2)
                    .addComponent(jButton15))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton3)
                    .addComponent(jButton4)
                    .addComponent(jButton5))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jScrollPane1.setViewportView(jPanel1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        if (state <= num && introducirJugada) {
         
            cods.add(1);
            codePegs[turno-1][state-1].setIcon(jButton6.getIcon());
            ++state;
            
        }
    }//GEN-LAST:event_jButton6ActionPerformed

    private void finishGame(boolean victory) {
        
        if (!victory) {
            JOptionPane.showMessageDialog(null, "Te has quedado sin turnos, Game over :(");
            jButton4ActionPerformed(null);
        }
        else {
            Pair<Boolean,Integer> p = CP.finishGame(victory);
            if (p.getLeft()){
                Pair<Boolean,Integer> p2 = CP.actualizaRanking(CP.getName(),p.getRight());
                if(p2.getLeft()){
                    JOptionPane.showMessageDialog(null, "¡Has acertado la combinación!\nHas ganado: "+p.getRight()+" puntos.\n"
                            + "¡Te has colocado en la "+p2.getRight()+"a posición en el ranking!");
                }
                else{
                    JOptionPane.showMessageDialog(null, "¡Has acertado la combinación!\nHas ganado: "+p.getRight()+" puntos.\n"
                            + "No has logrado entrar en el ranking.");
                }
                jButton4ActionPerformed(null);
            }
            else {
                JOptionPane.showMessageDialog(null, "Ha habido un error actualizando el ranking.","Error",JOptionPane.WARNING_MESSAGE);
            } 
        }
    }
    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        if (state <= num && introducirJugada) {
         
            cods.add(2);
            codePegs[turno-1][state-1].setIcon(jButton7.getIcon());
            ++state;
            
        }
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        if (state <= num && introducirJugada) {
         
            cods.add(3);
            codePegs[turno-1][state-1].setIcon(jButton8.getIcon());
            ++state;
            
        }
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        if (state <= num && introducirJugada) {
         
            cods.add(4);
            codePegs[turno-1][state-1].setIcon(jButton9.getIcon());
            ++state;
            
        }
    }//GEN-LAST:event_jButton9ActionPerformed

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        if (state <= num && introducirJugada) {
         
            cods.add(5);
            codePegs[turno-1][state-1].setIcon(jButton10.getIcon());
            ++state;
            
        }
    }//GEN-LAST:event_jButton10ActionPerformed

    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed
        if (state <= num && introducirJugada) {
         
            cods.add(6);
            codePegs[turno-1][state-1].setIcon(jButton11.getIcon());
            ++state;
            
        }
    }//GEN-LAST:event_jButton11ActionPerformed

    private void jButton12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton12ActionPerformed
        if (state <= num && introducirJugada) {
         
            cods.add(7);
            codePegs[turno-1][state-1].setIcon(jButton12.getIcon());
            ++state;
            
        }
    }//GEN-LAST:event_jButton12ActionPerformed

    private void jButton13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton13ActionPerformed
        if (state <= num && introducirJugada) {
         
            cods.add(8);
            codePegs[turno-1][state-1].setIcon(jButton13.getIcon());
            ++state;
            
        }
    }//GEN-LAST:event_jButton13ActionPerformed

    private void jButton14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton14ActionPerformed
        if (state <= num && introducirJugada) {
         
            cods.add(9);
            codePegs[turno-1][state-1].setIcon(jButton14.getIcon());
            ++state;
            
        }
    }//GEN-LAST:event_jButton14ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        VistaMenuPartida Vmp = new VistaMenuPartida();
        Vmp.setCP(CP);
        Vmp.setVisible(true);
        dispose();
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        Pair<Boolean,String> p = CP.saveGame();
        if (p.getLeft()){
            JOptionPane.showMessageDialog(null, "Has guardado la partida.");
        }
        else {
            JOptionPane.showMessageDialog(null, "Ha habido un error guardando la partida.","Error",JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        if (state != 1) {
            --state;
            codePegs[turno-1][state-1].setIcon(iconoVacio);
            cods.remove(cods.size()-1);
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        if (state <= num)
        JOptionPane.showMessageDialog(null, "Debes introducir todas las fichas.","Faltan fichas",JOptionPane.WARNING_MESSAGE);
        else {
            boolean victory = true;
            ArrayList<Integer> a = CP.jugadaCodeM(cods);
            if (a != null){

                for (int i = 0; i < a.size(); ++i){

                    if (a.get(i) == 2) keyPegs[turno-1][i].setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/2K.png")));
                    else if (a.get(i) == 1) {
                        victory = false;
                        keyPegs[turno-1][i].setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/1K.png")));
                    }
                    else victory = false;

                }
                if (victory) finishGame(true);
            }
            turno++;
            state = 1;
            cods = new ArrayList<Integer>();
            if (turno > dif) finishGame(false);
            actualizaPuntuacion();
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        JOptionPane.showMessageDialog(null, "Tienes que introducir un conjunto de fichas"
                + " que sirvan como intento de adivinar el patrón.");
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton15ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton15ActionPerformed
        int points = 0;
        if(dif == 8) points = 25;
        else if(dif == 10) points = 15;
        else if(dif == 12) points = 10;
        int reply = JOptionPane.showConfirmDialog(null, "¿Estás seguro de que quieres"
                + " ver una pista? Serás penalizado con "+points+" puntos menos."
                , "Ver pista",JOptionPane.WARNING_MESSAGE,JOptionPane.YES_NO_OPTION);
        if(reply == JOptionPane.YES_OPTION){
            CP.bajaPuntuacion();
            ArrayList<Integer> codeIni = CP.getCodeIni();
            int random = -1;
            boolean pistaValida = false;
            
            while(!pistaValida) {
                random = ThreadLocalRandom.current().nextInt(0, num);
                if(!pistas.get(random)) {
                    pistaValida = true;
                    pistas.set(random, true);
                }
            }
            String color = "prueba";
            if(codeIni.get(random) == 1){
                color = "roja";
            }
            if(codeIni.get(random) == 2){
                color = "verde";
            }
            if(codeIni.get(random) == 3){
                color = "amarilla";
            }
            if(codeIni.get(random) == 4){
                color = "naranja";
            }
            if(codeIni.get(random) == 5){
                color = "azul";
            }
            if(codeIni.get(random) == 6){
                color = "gris";
            }
            if(codeIni.get(random) == 7){
                color = "lila";
            }
            if(codeIni.get(random) == 8){
                color = "azul celeste";
            }
            if(codeIni.get(random) == 9){
                color = "azul mar";
            }
            JOptionPane.showMessageDialog(null, "Hay una ficha "+color+" en la "+(random+1)+" posición.");
            actualizaPuntuacion();
            ++nPistas;
            if (nPistas == num) {
                this.nPistas = 0;

                this.pistas = new ArrayList();
                for(int i = 0; i < num; i++)
                    pistas.add(false);
            }
        }
    }//GEN-LAST:event_jButton15ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VistaTableroCodeB.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VistaTableroCodeB.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VistaTableroCodeB.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VistaTableroCodeB.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VistaTableroCodeB().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton13;
    private javax.swing.JButton jButton14;
    private javax.swing.JButton jButton15;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables

    public void labelsMethod() {
    
        codePegs = new JLabel[dif][num];
        int x = 10, y = 8, auxX = 10;
        
        if (num < 9) x = (9 - num) * 35 + 10;
               
        for(int row = 0; row < dif; row++) {

            for(int col = 0; col < num; col++) {

                codePegs[row][col] = new JLabel();
                codePegs[row][col].setOpaque(false);
                codePegs[row][col].setBounds(x, y, 35, 35);
                codePegs[row][col].setIcon(iconoVacio);
                jPanel2.add(codePegs[row][col]);
                
                x += 35;
            }
            auxX = x;
            x = 10;
            if (num < 9) x = (9 - num) * 35 + 10;
            y += 35;
        }
                
        if (ran >= 1) jPanel4.add(jButton6);
        if (ran >= 2) jPanel4.add(jButton7);
        if (ran >= 3) jPanel4.add(jButton8);
        if (ran >= 4) jPanel4.add(jButton9);
        if (ran >= 5) jPanel4.add(jButton10);
        if (ran >= 6) jPanel4.add(jButton11);
        if (ran >= 7) jPanel4.add(jButton12);
        if (ran >= 8) jPanel4.add(jButton13);
        if (ran == 9) jPanel4.add(jButton14);
        
        x = auxX;
        y = 8;
        
        keyPegs = new JLabel[dif][num];
        
        for(int row = 0; row < dif; row++) {

            int col = 0;
            
            for(; col < num / 2; col++) {

                keyPegs[row][col] = new JLabel();
                keyPegs[row][col].setOpaque(false);
                keyPegs[row][col].setBounds(x, y, 18, 18);
                keyPegs[row][col].setIcon(iconoVacioK);
                jPanel2.add(keyPegs[row][col]);
                
                x += 17;
            }
            
            x = auxX;
            y += 17;
            
            for(; col < num; col++) {

                keyPegs[row][col] = new JLabel();
                keyPegs[row][col].setOpaque(false);
                keyPegs[row][col].setBounds(x, y, 18, 18);
                keyPegs[row][col].setIcon(iconoVacioK);
                jPanel2.add(keyPegs[row][col]);
                
                x += 17;
            }
            x = auxX;
            y += 18;
        }
        
        JLabel fondo = new JLabel();
        fondo.setOpaque(false);
        fondo.setBounds(0, 0, 424, 440);
        fondo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/tablero.png")));
        jPanel2.add(fondo);
    }
    
    private void cargarTableroB(ArrayList<ArrayList<Integer>> log) {
        
        for (int i = 0; i < log.size(); ++i){
            
            for (int j = 0; j < log.get(i).size(); ++j){
                
                codePegs[i][j].setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/"+Integer.toString(log.get(i).get(j))+".png")));
            }
        }
    }
    
    private void cargarTableroM(ArrayList<ArrayList<Integer>> log) {
        
        for (int i = 0; i < log.size(); ++i){
            
            for (int j = 0; j < log.get(i).size(); ++j){
                
                keyPegs[i][j].setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/"+Integer.toString(log.get(i).get(j))+"K.png")));
            }
        }
    }
}